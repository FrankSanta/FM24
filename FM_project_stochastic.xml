<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>clock globalTime;
const int T_fr = 5;       // assistance time of a first responder
const int T_zr = 7;       // assistance time of a zero responder
const int T_v = 12;       // becoming-casualty time for victims
const int P_fail = 10;    // 100*p the probability the sensor of a drone fails
const int P_listen = 85;    // 100*p the probability a survivor listens to the commands of a drone

// Constants for the verification properties
const int Civilians_p_always_safe = 59; 
const int Surv_p_always_safe = 99;
const int Vict_p_always_safe = 48;
const int Civilians_p_sometimes_safe = 59; 
const int Surv_p_sometimes_safe = 100;
const int Vict_p_sometimes_safe = 47;
const int Civilians_p_helping = 30;
const int T_scs = T_v + 10;

// Entity type
const int SURVIVOR = 0;
const int VICTIM = 1;
const int FIRST_RESPONDER = 2;
const int DRONE = 3;

// Tile type in the map
const int FREE = 0;
const int FIRE = 1;
const int EXIT = 2;

typedef struct {
    int[-1,1] x;
    int[-1,1] y;
} pos_delta_t;
pos_delta_t shifts[4] = {{0,1},{0,-1},{1,0},{-1,0}};

/*#################### Declaration ####################
THIS PORTION IS AUTOGENERATED */

const int N = 10;   // map rows
const int M = 10;   // map columns
typedef int[0,N] coordx_t;
typedef int[0,M] coordy_t;

// Entity amounts
const int SURVIVORS_QTY = 3;
const int VICTIMS_QTY = 6;
const int FIRST_RESPONDERS_QTY = 3;
const int DRONES_QTY = 2;
int[0,6] entities[4] = {SURVIVORS_QTY, VICTIMS_QTY, FIRST_RESPONDERS_QTY, DRONES_QTY};

// IDs
typedef int[0,SURVIVORS_QTY-1] id_s_t;
typedef int[0,VICTIMS_QTY-1] id_v_t;
typedef int[0,FIRST_RESPONDERS_QTY-1] id_f_t;
typedef int[0,DRONES_QTY-1] id_d_t;

// Busy statuses
bool survivors_busy[SURVIVORS_QTY];
bool victims_busy[VICTIMS_QTY];
bool responders_busy[FIRST_RESPONDERS_QTY];

typedef struct {
    coordx_t x;
    coordy_t y;
} pos_t;
const pos_t pos_out_of_map = {N,M};

typedef struct {
    coordx_t min_x;
    coordy_t min_y;
    coordx_t max_x;
    coordy_t max_y;
} bounds_t;// Positions for survivors, victims and first responders
pos_t survivors[SURVIVORS_QTY] = {{4,8}, {4,2}, {0,0}};
pos_t victims[VICTIMS_QTY] = {{7,2}, {1,2}, {6,4}, {2,2}, {8,9}, {4,5}};
pos_t responders[FIRST_RESPONDERS_QTY] = {{3,1}, {4,9}, {9,2}};

// Positions and area bounds for drones
pos_t drones[DRONES_QTY] = {{2,2}, {2,7}};
bounds_t bounds[DRONES_QTY] = {{2 , 2, 7, 3}, {2 , 7, 7, 7}};
int drones_visibilities[DRONES_QTY] = {2,2};

int[0,2] map[N][M] = {
  {0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0},
  {2,0,0,0,0,0,0,0,0,2},
  {2,0,0,0,0,0,0,0,0,2},
  {0,0,0,1,1,1,0,1,0,0},
  {0,0,0,1,1,1,0,1,1,0},
  {0,0,0,1,1,1,0,1,1,1}
};
//#################################################################

// Channels
broadcast chan rescue[SURVIVORS_QTY], callFirstResponder[SURVIVORS_QTY], waitForSurvivor[FIRST_RESPONDERS_QTY], goToVictim[FIRST_RESPONDERS_QTY], helping[VICTIMS_QTY], save[VICTIMS_QTY];
id_v_t survToFRVictim[FIRST_RESPONDERS_QTY];

int[0,SURVIVORS_QTY] n_helping_civilians = 0;

// Manhattan distance since motion is on the 4 cardinal directions
int distance(pos_t pos1, pos_t pos2){
    int dist_x = pos1.x-pos2.x;
    int dist_y = pos1.y-pos2.y;

    if (pos1.x == pos_out_of_map.x || pos1.y == pos_out_of_map.y || pos2.x == pos_out_of_map.x || pos2.y == pos_out_of_map.y) {
        return INT16_MAX;
    }

    if(dist_x &lt; 0){
        dist_x = -dist_x;
    }
    if(dist_y &lt; 0){
        dist_y = -dist_y;
    }
    return dist_x+dist_y;
}

// Returns the ID of the closest entity
int utilGetClosest(int type, pos_t pos) {
    int closest = INT16_MAX;
    int closestDist = INT16_MAX;
    int temp;
    int k;
    int l;
    if (type==SURVIVOR) {
        for(k=0; k&lt;entities[type]; k++) {
            temp = distance(pos, survivors[k]);
            if(temp &lt; closestDist &amp;&amp; !survivors_busy[k]){
                closest = k;
                closestDist = temp;      
            }
        }
    }
    if (type==VICTIM) {
        for(k=0; k&lt;entities[type]; k++) {
            temp = distance(pos, victims[k]);
            if(temp &lt; closestDist &amp;&amp; !victims_busy[k]){
                closest = k;
                closestDist = temp;      
            }
        }
    }
    if (type==FIRST_RESPONDER) {
        for(k=0; k&lt;entities[type]; k++) {
            temp = distance(pos, responders[k]);
            if(temp &lt; closestDist &amp;&amp; !responders_busy[k]){
                closest = k;
                closestDist = temp;      
            }
        }
    }
    if (type==DRONE) {
        for(k=0; k&lt;entities[type]; k++) {
            temp = distance(pos, drones[k]);
            if(temp &lt; closestDist){
                closest = k;
                closestDist = temp;      
            }
        }
    }
    return closest;
}

// Returns the pos_t of the closest entity
pos_t utilGetClosestPos(int type, pos_t pos) {
    int closestId = utilGetClosest(type, pos);
    if (closestId == INT16_MAX) {
        return pos_out_of_map;
    }
    
    if (type==SURVIVOR) {
        return survivors[closestId];
    }
    if (type==VICTIM) {
        return victims[closestId];
    }
    if (type==FIRST_RESPONDER) {
        return responders[closestId];
    }
    return drones[closestId];
}

bool isOccupied(pos_t p) {
    int i;
    for (i = 0; i &lt; SURVIVORS_QTY; i++) {
        if (survivors[i].x == p.x &amp;&amp; survivors[i].y == p.y) {
            return true;
        }
    }
    for (i = 0; i &lt; FIRST_RESPONDERS_QTY; i++) {
        if (responders[i].x == p.x &amp;&amp; responders[i].y == p.y) {
            return true;
        }
    }
    for (i = 0; i &lt; VICTIMS_QTY; i++) {
        if (victims[i].x == p.x &amp;&amp; victims[i].y == p.y) {
            return true;
        }
    }
    return false;
}

bool tileIsNearSomething(pos_t p, int type) {
    if (p.x-1 &gt; 0 &amp;&amp; map[p.x-1][p.y] == type) {
        return true;
    }
    if (p.x+1 &lt; N &amp;&amp; map[p.x+1][p.y] == type) {
        return true;
    }
    if (p.y-1 &gt; 0 &amp;&amp; map[p.x][p.y-1] == type) {
        return true;
    }
    if (p.y+1 &lt; M &amp;&amp; map[p.x][p.y+1] == type) {
        return true;
    }
    return false;
}

bool tileIsNearVictim(pos_t p) {
    int[0,VICTIMS_QTY] k;
    for(k=0; k&lt;VICTIMS_QTY; k++) {
        if (victims[k].x == p.x &amp;&amp; p.y&lt;M &amp;&amp; victims[k].y == p.y+1) {
            return true;
        }
        if (victims[k].x == p.x &amp;&amp; p.y&gt;0 &amp;&amp; victims[k].y == p.y-1) {
            return true;
        }
        if (victims[k].y == p.y &amp;&amp; p.x&lt;N &amp;&amp; victims[k].x == p.x+1) {
            return true;
        }
        if (victims[k].y == p.y &amp;&amp; p.x&gt;0 &amp;&amp; victims[k].x == p.x-1) {
            return true;
        }
    }
    return false;
}

bool positionInvalid(int[-1,N+1] x, int[-1,M+1] y) {
    return x &lt; 0 || y &lt; 0 || x &gt;= N || y &gt;= M;
}</declaration>
	<template>
		<name x="5" y="5">Responder</name>
		<parameter>const id_f_t id</parameter>
		<declaration>// Place local declarations here.
clock t_resp;
id_v_t victim;
pos_t victimPos;

bool can_go_to(pos_t pos){
    return  !isOccupied(pos) &amp;&amp; map[pos.x][pos.y] != FIRE;
}

// Returns the ID of the closest entity, using the util function
int getClosest(int type) {
    return utilGetClosest(type, responders[id]);
}

// Returns the pos_t of the closest entity, using the util function
pos_t getClosestPos(int type) {
    return utilGetClosestPos(type, responders[id]);
}

void move() {    
    pos_t oldPos = responders[id];
    pos_t newPos;
    pos_delta_t posDelta;
    int k;
    pos_t temp_x;
    pos_t temp_y;
    pos_t closest_victim = getClosestPos(VICTIM);
    
    posDelta.x = 0;
    posDelta.y = 0;
    t_resp = 0;
    
    if(closest_victim == pos_out_of_map){ // all victims are safe
        return;
    }
    // get delta x
    if(oldPos.x &lt; closest_victim.x){
        posDelta.x = 1;
    }
    else if(oldPos.x &gt; closest_victim.x){
        posDelta.x = -1;
    }
    
    // get delta y
    if(oldPos.y &lt; closest_victim.y){
        posDelta.y = 1;
    }
    else if(oldPos.y &gt; closest_victim.y){
        posDelta.y = -1;
    }
    
    // get closer to the exit
    newPos = oldPos;
    temp_x.x = oldPos.x + posDelta.x;
    temp_x.y = oldPos.y;
    temp_y.x = oldPos.x;
    temp_y.y = oldPos.y + posDelta.y;
    if(posDelta.x != 0 &amp;&amp; can_go_to(temp_x)){ // get closer on x if possible
        newPos = temp_x;
    }
    else if(posDelta.y != 0 &amp;&amp; can_go_to(temp_y)){ // get closer on y if possible
        newPos = temp_y;
    }
    else { // try all directions
        for(k=0; k&lt;4; k++) {
            posDelta = shifts[k];
            if (!positionInvalid(oldPos.x+posDelta.x, oldPos.y+posDelta.y)) {
                newPos.x = oldPos.x + posDelta.x;
                newPos.y = oldPos.y + posDelta.y;
            }
            if (can_go_to(newPos)) { 
                k=4;
            }
        }
    }
    if (can_go_to(newPos)) { 
        responders[id] = newPos;
    }
    return;
}

void helpBeginningFar() {
    responders_busy[id] = true;
    victim = survToFRVictim[id];
    victimPos = victims[victim];
    t_resp = 0;
}
void helpBeginningNear() {
    responders_busy[id] = true;
    victim = getClosest(VICTIM);
    victimPos = victims[victim];
    t_resp = 0;
}

void doneHelping(){
    responders[id] = victimPos;
    t_resp = 0;
    responders_busy[id] = false;
}

</declaration>
		<location id="id0" x="-1105" y="-552">
			<name x="-1088" y="-552">Deciding</name>
			<committed/>
		</location>
		<location id="id1" x="-773" y="-841">
			<name x="-748" y="-867">Helping</name>
			<label kind="invariant" x="-748" y="-850">t_resp &lt;= T_fr</label>
		</location>
		<location id="id2" x="-773" y="-331">
			<name x="-807" y="-306">Reaching</name>
			<label kind="invariant" x="-986" y="-374">t_resp &lt;= distance(responders[id], victimPos)</label>
		</location>
		<location id="id3" x="-1513" y="-552">
			<name x="-1581" y="-569">Moving</name>
			<label kind="invariant" x="-1624" y="-552">t_resp &lt;= 1</label>
		</location>
		<location id="id4" x="-1105" y="-331">
			<name x="-1181" y="-306">Waiting_for_survivor</name>
		</location>
		<init ref="id0"/>
		<transition id="id5">
			<source ref="id0"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-1096" y="-467">waitForSurvivor[id]?</label>
			<label kind="assignment" x="-1088" y="-442">helpBeginningFar()</label>
		</transition>
		<transition id="id6">
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-1003" y="-323">goToVictim[id]?</label>
			<label kind="assignment" x="-986" y="-297">t_resp = 0</label>
		</transition>
		<transition id="id7">
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-1428" y="-382">waitForSurvivor[id]?</label>
			<label kind="assignment" x="-1419" y="-357">helpBeginningFar()</label>
			<nail x="-1513" y="-331"/>
		</transition>
		<transition id="id8">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-1530" y="-841">distance(responders[id], getClosestPos(VICTIM)) &lt;= 1</label>
			<label kind="synchronisation" x="-1343" y="-790">helping[getClosest(VICTIM)]!</label>
			<label kind="assignment" x="-1283" y="-816">helpBeginningNear()</label>
			<nail x="-1105" y="-841"/>
		</transition>
		<transition id="id9">
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="guard" x="-1496" y="-603">distance(responders[id], getClosestPos(VICTIM)) &gt; 1</label>
			<label kind="assignment" x="-1360" y="-578">t_resp = 0</label>
		</transition>
		<transition id="id10">
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-986" y="-629">t_resp &gt;= distance(responders[id], victimPos)</label>
			<label kind="assignment" x="-765" y="-603">t_resp = 0</label>
		</transition>
		<transition id="id11">
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="guard" x="-1292" y="-518">t_resp &gt;= 1</label>
			<label kind="assignment" x="-1275" y="-493">move()</label>
			<nail x="-1326" y="-518"/>
		</transition>
		<transition id="id12">
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-1037" y="-739">t_resp &gt;= T_fr</label>
			<label kind="synchronisation" x="-1045" y="-688">save[victim]!</label>
			<label kind="assignment" x="-1045" y="-714">doneHelping()</label>
		</transition>
	</template>
	<template>
		<name>Victim</name>
		<parameter>const id_v_t id</parameter>
		<declaration>void exitMap() {
    victims[id] = pos_out_of_map;
}

void setBusy() {
    victims_busy[id] = true;
}</declaration>
		<location id="id13" x="-586" y="-8">
			<name x="-611" y="-42">In_need</name>
			<label kind="invariant" x="-645" y="-68">globalTime &lt;= T_v</label>
		</location>
		<location id="id14" x="68" y="-8">
			<name x="58" y="-42">Safe</name>
		</location>
		<location id="id15" x="-246" y="-8">
			<name x="-289" y="-42">Being_helped</name>
		</location>
		<location id="id16" x="-246" y="93">
			<name x="-221" y="85">Casualty</name>
		</location>
		<init ref="id13"/>
		<transition id="id17">
			<source ref="id13"/>
			<target ref="id16"/>
			<label kind="guard" x="-510" y="51">globalTime &gt;= T_v</label>
			<label kind="assignment" x="-484" y="76">setBusy()</label>
		</transition>
		<transition id="id18">
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="-229" y="25">globalTime &gt; T_v</label>
			<label kind="synchronisation" x="-229" y="51">save[id]?</label>
		</transition>
		<transition id="id19">
			<source ref="id13"/>
			<target ref="id15"/>
			<label kind="guard" x="-476" y="-85">globalTime &lt;= T_v</label>
			<label kind="synchronisation" x="-459" y="-34">helping[id]?</label>
			<label kind="assignment" x="-450" y="-59">setBusy()</label>
		</transition>
		<transition id="id20">
			<source ref="id15"/>
			<target ref="id14"/>
			<label kind="guard" x="-144" y="-85">globalTime &lt;= T_v</label>
			<label kind="synchronisation" x="-119" y="-34">save[id]?</label>
			<label kind="assignment" x="-119" y="-59">exitMap()</label>
		</transition>
	</template>
	<template>
		<name>Drone</name>
		<parameter>const id_d_t id</parameter>
		<declaration>// Place local declarations here.

clock t; 
pos_delta_t dir = {-1, -1};
int[0,5] Nv = 0;

bool hit_x_bound(){
    coordx_t min_x = bounds[id].min_x;
    coordx_t max_x = bounds[id].max_x;
    return (drones[id].x + dir.x &lt; min_x) || (drones[id].x + dir.x &gt; max_x);
}

bool hit_y_bound(){
    coordy_t min_y = bounds[id].min_y;
    coordy_t max_y = bounds[id].max_y;
    return (drones[id].y + dir.y &lt; min_y) || (drones[id].y + dir.y &gt; max_y);
}

bool on_track(){
    coordy_t min_y = bounds[id].min_y;
    return (drones[id].y - min_y) % (2 * Nv + 1) == 0;
}

void patrol() {
    coordx_t min_x = bounds[id].min_x;
    coordx_t max_x = bounds[id].max_x;
    coordy_t min_y = bounds[id].min_y;
    coordy_t max_y = bounds[id].max_y;

    Nv = drones_visibilities[id];
    if (hit_x_bound() &amp;&amp; hit_y_bound()){ //hit both bounds ==&gt; flip directions and restart
        dir.x = -dir.x;
        dir.y = -dir.y;
        if(!hit_x_bound()) {//if can move x do it
            drones[id].x += dir.x;
        }
        else if(!hit_y_bound()) { //if can move y do it
            drones[id].y += dir.y;
        }
        //else stand still
    }
    else if (!hit_x_bound()) { //if in bound move along x
        drones[id].x += dir.x;
    }
    else { // cannot move further x and not hit y bound =&gt; move y until new track or end
        drones[id].y += dir.y;
        if (on_track() &amp;&amp; !hit_y_bound()) { //on the last y-move flip x direction
            dir.x = -dir.x;
        }
    }
}

// Returns the ID of the closest entity, using the util function
int getClosest(int type) {
    return utilGetClosest(type, drones[id]);
}

// Returns the pos_t of the closest entity, using the util function
pos_t getClosestPos(int type) {
    return utilGetClosestPos(type, drones[id]);
}

bool survivorNear() {
    if ( distance(drones[id], getClosestPos(SURVIVOR)) &gt; Nv || distance(drones[id], getClosestPos(VICTIM)) &gt; Nv ) {
        return false;
    }
    return true;
}

bool survivorWillHelp() {
    if ( distance(getClosestPos(SURVIVOR), getClosestPos(VICTIM)) &lt; distance(getClosestPos(SURVIVOR), getClosestPos(FIRST_RESPONDER)) + distance(getClosestPos(FIRST_RESPONDER), getClosestPos(VICTIM)) )
        return true;
    return false;
}
</declaration>
		<location id="id21" x="-374" y="-34">
			<name x="-408" y="-76">Deciding</name>
			<committed/>
		</location>
		<location id="id22" x="-59" y="-34">
			<name x="-51" y="-68">Moving</name>
			<label kind="invariant" x="-51" y="-93">t&lt;=1</label>
		</location>
		<location id="id23" x="-59" y="314">
			<name x="-110" y="348">Communicating</name>
			<committed/>
		</location>
		<branchpoint id="id24" x="-374" y="314"/>
		<init ref="id21"/>
		<transition id="id25">
			<source ref="id24"/>
			<target ref="id22"/>
			<label kind="probability" x="-442" y="195">P_fail</label>
			<nail x="-450" y="314"/>
			<nail x="-450" y="-161"/>
			<nail x="-59" y="-161"/>
		</transition>
		<transition id="id26">
			<source ref="id24"/>
			<target ref="id23"/>
			<label kind="probability" x="-263" y="331">100-P_fail</label>
		</transition>
		<transition id="id27">
			<source ref="id23"/>
			<target ref="id22"/>
			<label kind="guard" x="-51" y="8">survivorWillHelp()</label>
			<label kind="synchronisation" x="-51" y="42">rescue[getClosest(SURVIVOR)]!</label>
		</transition>
		<transition id="id28">
			<source ref="id23"/>
			<target ref="id22"/>
			<label kind="guard" x="170" y="170">!survivorWillHelp()</label>
			<label kind="synchronisation" x="0" y="204">callFirstResponder[getClosest(SURVIVOR)]!</label>
			<nail x="331" y="314"/>
			<nail x="331" y="-34"/>
		</transition>
		<transition id="id29">
			<source ref="id21"/>
			<target ref="id24"/>
			<label kind="guard" x="-365" y="127">survivorNear()</label>
		</transition>
		<transition id="id30">
			<source ref="id22"/>
			<target ref="id21"/>
			<label kind="guard" x="-238" y="8">t&gt;=1</label>
			<label kind="assignment" x="-238" y="34">t=0</label>
			<nail x="-221" y="0"/>
		</transition>
		<transition id="id31">
			<source ref="id21"/>
			<target ref="id22"/>
			<label kind="guard" x="-272" y="-110">!survivorNear()</label>
			<label kind="assignment" x="-246" y="-85">patrol()</label>
			<nail x="-221" y="-59"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Survivor</name>
		<parameter>const id_s_t id</parameter>
		<declaration>// Place local declarations here.
clock t;
id_v_t victim;
id_f_t responder;
pos_t victimPos;
pos_t responderPos;

bool can_go_to(pos_t pos){
    return  !isOccupied(pos) &amp;&amp; !tileIsNearSomething(pos, FIRE) &amp;&amp; map[pos.x][pos.y] != FIRE;
}

pos_t get_closest_exit(pos_t pos){
    coordx_t i;
    coordy_t j;
    int closestDist = INT16_MAX;
    pos_t closest_exit;
    pos_t temp;
    
    for(i=0; i &lt; N; i++){
       for(j = 0; j &lt; M; j++){
            temp.x = i;
            temp.y = j;
            if(map[i][j] == EXIT &amp;&amp; distance(pos, temp) &lt; closestDist){
                closest_exit = temp;
            }
        }
    }
    return closest_exit;
}

void move() {    
    pos_t oldPos = survivors[id];
    pos_t newPos;
    pos_delta_t posDelta;
    int k;
    pos_t temp_x;
    pos_t temp_y;
    pos_t closest_exit = get_closest_exit(oldPos);

    posDelta.x = 0;
    posDelta.y = 0;
    t = 0;
    
    // get delta x
    if(oldPos.x &lt; closest_exit.x){
        posDelta.x = 1;
    }
    else if(oldPos.x &gt; closest_exit.x){
        posDelta.x = -1;
    }
    
    // get delta y
    if(oldPos.y &lt; closest_exit.y){
        posDelta.y = 1;
    }
    else if(oldPos.y &gt; closest_exit.y){
        posDelta.y = -1;
    }
    
    // get closer to the exit
    newPos = oldPos;
    temp_x.x = oldPos.x + posDelta.x;
    temp_x.y = oldPos.y;
    temp_y.x = oldPos.x;
    temp_y.y = oldPos.y + posDelta.y;
    if(posDelta.x != 0 &amp;&amp; can_go_to(temp_x)){ // get closer on x if possible
        newPos = temp_x;
    }
    else if(posDelta.y != 0 &amp;&amp; can_go_to(temp_y)){ // get closer on y if possible
        newPos = temp_y;
    }
    else { // try all directions
        for(k=0; k&lt;4; k++) {
            posDelta = shifts[k];
            if (!positionInvalid(oldPos.x+posDelta.x, oldPos.y+posDelta.y)) {
                newPos.x = oldPos.x + posDelta.x;
                newPos.y = oldPos.y + posDelta.y;
            }
            if (can_go_to(newPos)) { 
                k=4;
            }
        }
    }
    if (can_go_to(newPos)) {
        survivors[id] = newPos;
    }
    return;
}

// Returns the ID of the closest entity, using the util function
int getClosest(int type) {
    return utilGetClosest(type, survivors[id]);
}

// Returns the pos_t of the closest entity, using the util function
pos_t getClosestPos(int type) {
    return utilGetClosestPos(type, survivors[id]);
}

bool nearExit() {
    pos_t pos = survivors[id];
    return tileIsNearSomething(pos, EXIT);
}

void doneReachingFR() {
    survivors[id] = responderPos;
    t = 0;
}
void doneReachingVictim() {
    survivors[id]=victimPos;
    t = 0;
}
void doneReachingAlone() {
    survivors[id]=victimPos;
    t = 0;
}
void exitMap() {
    survivors[id] = pos_out_of_map;
}

void exitMapAfterHelp(){
    n_helping_civilians++;
    exitMap();
}

void helpBeginning() {
    survivors_busy[id] = true;
    victim = getClosest(VICTIM);
    victimPos = victims[victim];
}

void helpBeginningWithFR(){
    helpBeginning();
    responder = getClosest(FIRST_RESPONDER);
    responderPos = responders[responder];
    survToFRVictim[responder] = victim;
}</declaration>
		<location id="id32" x="-162" y="442">
			<name x="-195" y="399">Deciding</name>
			<committed/>
		</location>
		<location id="id33" x="408" y="442">
			<name x="433" y="434">Moving</name>
			<label kind="invariant" x="441" y="459">t&lt;=1</label>
		</location>
		<location id="id34" x="977" y="119">
			<name x="960" y="144">Safe</name>
		</location>
		<location id="id35" x="646" y="119">
			<name x="620" y="85">Helping</name>
			<label kind="invariant" x="612" y="59">t &lt;= T_zr</label>
		</location>
		<location id="id36" x="170" y="119">
			<name x="109" y="85">Reaching_alone</name>
			<label kind="invariant" x="25" y="59">t &lt;= distance(survivors[id], victimPos)</label>
		</location>
		<location id="id37" x="-170" y="-76">
			<name x="-212" y="-110">Reaching_FR</name>
			<label kind="invariant" x="-212" y="-136">t &lt;= distance(survivors[id], responderPos)</label>
		</location>
		<location id="id38" x="977" y="-76">
			<name x="918" y="-110">Helping_with_FR</name>
			<label kind="invariant" x="943" y="-136">t &lt;= T_fr</label>
		</location>
		<location id="id39" x="408" y="-76">
			<name x="349" y="-110">Reaching_victim</name>
			<label kind="invariant" x="246" y="-136">t &lt;= distance(survivors[id], victimPos)</label>
		</location>
		<location id="id40" x="297" y="229">
			<committed/>
		</location>
		<location id="id41" x="-170" y="136">
			<committed/>
		</location>
		<location id="id42" x="374" y="331">
			<committed/>
		</location>
		<location id="id43" x="-51" y="238">
			<committed/>
		</location>
		<location id="id44" x="-170" y="17">
			<committed/>
		</location>
		<branchpoint id="id45" x="-170" y="238"/>
		<branchpoint id="id46" x="297" y="297"/>
		<init ref="id33"/>
		<transition id="id47">
			<source ref="id41"/>
			<target ref="id44"/>
			<label kind="synchronisation" x="-161" y="85">waitForSurvivor[responder]!</label>
		</transition>
		<transition id="id48">
			<source ref="id45"/>
			<target ref="id33"/>
			<label kind="probability" x="-161" y="272">100-P_listen</label>
			<nail x="-76" y="289"/>
		</transition>
		<transition id="id49">
			<source ref="id45"/>
			<target ref="id41"/>
			<label kind="assignment" x="-161" y="170">helpBeginningWithFR()</label>
			<label kind="probability" x="-161" y="195">P_listen</label>
		</transition>
		<transition id="id50">
			<source ref="id43"/>
			<target ref="id45"/>
		</transition>
		<transition id="id51">
			<source ref="id42"/>
			<target ref="id46"/>
		</transition>
		<transition id="id52">
			<source ref="id46"/>
			<target ref="id33"/>
			<label kind="probability" x="263" y="348">100-P_listen</label>
			<nail x="357" y="382"/>
		</transition>
		<transition id="id53">
			<source ref="id46"/>
			<target ref="id40"/>
			<label kind="assignment" x="323" y="272">helpBeginning()</label>
			<label kind="probability" x="323" y="246">P_listen</label>
		</transition>
		<transition id="id54">
			<source ref="id44"/>
			<target ref="id37"/>
			<label kind="synchronisation" x="-161" y="-34">helping[victim]!</label>
			<label kind="assignment" x="-161" y="-8">t = 0</label>
		</transition>
		<transition id="id55">
			<source ref="id40"/>
			<target ref="id36"/>
			<label kind="synchronisation" x="119" y="187">helping[victim]!</label>
			<label kind="assignment" x="195" y="212">t=0</label>
		</transition>
		<transition id="id56">
			<source ref="id39"/>
			<target ref="id38"/>
			<label kind="guard" x="535" y="-68">t &gt;= distance(survivors[id], victimPos)</label>
			<label kind="assignment" x="612" y="-42">doneReachingVictim()</label>
		</transition>
		<transition id="id57">
			<source ref="id37"/>
			<target ref="id39"/>
			<label kind="guard" x="-59" y="-68">t &gt;= distance(survivors[id], responderPos)</label>
			<label kind="synchronisation" x="17" y="-17">goToVictim[responder]!</label>
			<label kind="assignment" x="42" y="-42">doneReachingFR()</label>
			<nail x="391" y="-76"/>
		</transition>
		<transition id="id58">
			<source ref="id38"/>
			<target ref="id34"/>
			<label kind="guard" x="960" y="0">t &gt;= T_fr</label>
			<label kind="assignment" x="901" y="25">exitMapAfterHelp()</label>
		</transition>
		<transition id="id59">
			<source ref="id33"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="17" y="289">callFirstResponder[id]?</label>
		</transition>
		<transition id="id60">
			<source ref="id36"/>
			<target ref="id35"/>
			<label kind="guard" x="246" y="136">t &gt;= distance(survivors[id], victimPos)</label>
			<label kind="assignment" x="323" y="161">doneReachingAlone()</label>
		</transition>
		<transition id="id61">
			<source ref="id33"/>
			<target ref="id42"/>
			<label kind="synchronisation" x="391" y="348">rescue[id]?</label>
		</transition>
		<transition id="id62">
			<source ref="id35"/>
			<target ref="id34"/>
			<label kind="guard" x="756" y="127">t &gt;= T_zr</label>
			<label kind="synchronisation" x="739" y="178">save[victim]!</label>
			<label kind="assignment" x="731" y="153">exitMapAfterHelp()</label>
		</transition>
		<transition id="id63">
			<source ref="id33"/>
			<target ref="id32"/>
			<label kind="guard" x="25" y="450">t&gt;=1 &amp;&amp; !nearExit()</label>
			<label kind="assignment" x="93" y="476">t=0</label>
		</transition>
		<transition id="id64">
			<source ref="id33"/>
			<target ref="id34"/>
			<label kind="guard" x="671" y="289">nearExit()</label>
			<label kind="assignment" x="671" y="314">exitMap()</label>
		</transition>
		<transition id="id65">
			<source ref="id32"/>
			<target ref="id33"/>
			<label kind="assignment" x="85" y="382">move()</label>
			<nail x="110" y="408"/>
		</transition>
	</template>
	<system>// System definition
system Drone, Responder, Survivor, Victim;</system>
	<queries>
		<option key="--epsilon" value="0.025"/>
		<query>
			<formula>Pr[&lt;= T_scs] (&lt;&gt; ((sum(v : id_v_t) Victim(v).Safe) + (sum(v : id_s_t) Survivor(v).Safe)) &gt;= ((VICTIMS_QTY + SURVIVORS_QTY) * Civilians_p_always_safe/100) and globalTime &lt;= T_scs)</formula>
			<comment>A percentage Civilians_p_always_safe of all civilians is always guaranteed to reach a safe state within T_scs</comment>
			<result outcome="success" type="interval" value="≥ 0.97505 (95% CI)" timestamp="2024-07-22 16:14:28 +0200">
				<option key="--epsilon" value="0.025"/>
				<details>≥ 0.97505 (95% CI)</details>
				<plot title="Probability Density Distribution" xaxis="run duration in time" yaxis="probability density">
					<series title="density" type="b(0.307692)" color="0x0000ff" encoding="csv">8.0,2.448630136986301
8.307692307692308,0.0
8.615384615384615,0.0
8.923076923076923,0.0
9.23076923076923,0.0
9.538461538461538,0.0
9.846153846153847,0.4674657534246575
10.153846153846153,0.0
10.461538461538462,0.0
10.76923076923077,0.20034246575342465
11.076923076923077,0.0
11.384615384615385,0.0
11.692307692307693,0.0
12.0,0.13356164383561642
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.636986301369863,0.0
8.636986301369863,2.4486301369863015
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.30769, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 12]
Mean estimate of displayed sample: 8.637 ± 0.19295 (95% CI)</comment>
				</plot>
				<plot title="Probability Density Confidence Intervals" xaxis="run duration in time" yaxis="probability density">
					<series title="upper limit" type="b(0.307692)" color="0xa0a0ff" encoding="csv">8.0,0.8209385952735557
8.307692307692308,0.0249497761119478
8.615384615384615,0.0249497761119478
8.923076923076923,0.0249497761119478
9.23076923076923,0.0249497761119478
9.538461538461538,0.0249497761119478
9.846153846153847,0.21142727837271047
10.153846153846153,0.0249497761119478
10.461538461538462,0.0249497761119478
10.76923076923077,0.11379256000356058
11.076923076923077,0.0249497761119478
11.384615384615385,0.0249497761119478
11.692307692307693,0.0249497761119478
12.0,0.08730043446053852
					</series>
					<series title="lower limit" type="b(0.307692)" color="0x0000ff" encoding="csv">8.0,0.6753366870326926
8.307692307692308,0.0
8.615384615384615,0.0
8.923076923076923,0.0
9.23076923076923,0.0
9.538461538461538,0.0
9.846153846153847,0.09129474888195442
10.153846153846153,0.0
10.461538461538462,0.0
10.76923076923077,0.028572137244686532
11.076923076923077,0.0
11.384615384615385,0.0
11.692307692307693,0.0
12.0,0.015228495232857476
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.636986301369863,0.0
8.636986301369863,2.668050434639056
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.30769, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 12]
Mean estimate of displayed sample: 8.637 ± 0.19295 (95% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="probability" type="b(0.307692)" color="0x0000ff" encoding="csv">8.0,0.7534246575342466
8.307692307692308,0.0
8.615384615384615,0.0
8.923076923076923,0.0
9.23076923076923,0.0
9.538461538461538,0.0
9.846153846153847,0.14383561643835616
10.153846153846153,0.0
10.461538461538462,0.0
10.76923076923077,0.06164383561643835
11.076923076923077,0.0
11.384615384615385,0.0
11.692307692307693,0.0
12.0,0.0410958904109589
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.636986301369863,0.0
8.636986301369863,0.7534246575342466
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.30769, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 12]
Mean estimate of displayed sample: 8.637 ± 0.19295 (95% CI)</comment>
				</plot>
				<plot title="Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="b(0.307692)" color="0xa0a0ff" encoding="csv">8.0,0.8209385952735557
8.307692307692308,0.0249497761119478
8.615384615384615,0.0249497761119478
8.923076923076923,0.0249497761119478
9.23076923076923,0.0249497761119478
9.538461538461538,0.0249497761119478
9.846153846153847,0.21142727837271047
10.153846153846153,0.0249497761119478
10.461538461538462,0.0249497761119478
10.76923076923077,0.11379256000356058
11.076923076923077,0.0249497761119478
11.384615384615385,0.0249497761119478
11.692307692307693,0.0249497761119478
12.0,0.08730043446053852
					</series>
					<series title="lower limit" type="b(0.307692)" color="0x0000ff" encoding="csv">8.0,0.6753366870326926
8.307692307692308,0.0
8.615384615384615,0.0
8.923076923076923,0.0
9.23076923076923,0.0
9.538461538461538,0.0
9.846153846153847,0.09129474888195442
10.153846153846153,0.0
10.461538461538462,0.0
10.76923076923077,0.028572137244686532
11.076923076923077,0.0
11.384615384615385,0.0
11.692307692307693,0.0
12.0,0.015228495232857476
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.636986301369863,0.0
8.636986301369863,0.8209385952735557
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.30769, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 12]
Mean estimate of displayed sample: 8.637 ± 0.19295 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">8.0,0.0
8.307692307692308,0.7534246575342466
8.615384615384615,0.7534246575342466
8.923076923076923,0.7534246575342466
9.23076923076923,0.7534246575342466
9.538461538461538,0.7534246575342466
9.846153846153847,0.7534246575342466
10.153846153846153,0.8972602739726028
10.461538461538462,0.8972602739726028
10.76923076923077,0.8972602739726028
11.076923076923077,0.958904109589041
11.384615384615385,0.958904109589041
11.692307692307693,0.958904109589041
12.0,0.958904109589041
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.636986301369863,0.0
8.636986301369863,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.30769, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 12]
Mean estimate of displayed sample: 8.637 ± 0.19295 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">8.0,0.0249497761119478
8.307692307692308,0.8209385952735557
8.615384615384615,0.8209385952735557
8.923076923076923,0.8209385952735557
9.23076923076923,0.8209385952735557
9.538461538461538,0.8209385952735557
9.846153846153847,0.8209385952735557
10.153846153846153,0.9413474147662219
10.461538461538462,0.9413474147662219
10.76923076923077,0.9413474147662219
11.076923076923077,0.9847715047671425
11.384615384615385,0.9847715047671425
11.692307692307693,0.9847715047671425
12.0,0.9847715047671425
					</series>
					<series title="lower limit" type="k" color="0xdd0000" encoding="csv">8.0,0.0
8.307692307692308,0.6753366870326926
8.615384615384615,0.6753366870326926
8.923076923076923,0.6753366870326926
9.23076923076923,0.6753366870326926
9.538461538461538,0.6753366870326926
9.846153846153847,0.6753366870326926
10.153846153846153,0.8362119014509107
10.461538461538462,0.8362119014509107
10.76923076923077,0.8362119014509107
11.076923076923077,0.9126995655394615
11.384615384615385,0.9126995655394615
11.692307692307693,0.9126995655394615
12.0,0.9126995655394615
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">8.0,0.0
8.307692307692308,0.7534246575342466
8.615384615384615,0.7534246575342466
8.923076923076923,0.7534246575342466
9.23076923076923,0.7534246575342466
9.538461538461538,0.7534246575342466
9.846153846153847,0.7534246575342466
10.153846153846153,0.8972602739726028
10.461538461538462,0.8972602739726028
10.76923076923077,0.8972602739726028
11.076923076923077,0.958904109589041
11.384615384615385,0.958904109589041
11.692307692307693,0.958904109589041
12.0,0.958904109589041
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.636986301369863,0.0
8.636986301369863,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.30769, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 12]
Mean estimate of displayed sample: 8.637 ± 0.19295 (95% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="run duration in time" yaxis="count">
					<series title="count" type="b(0.307692)" color="0x0000ff" encoding="csv">8.0,110.0
8.307692307692308,0.0
8.615384615384615,0.0
8.923076923076923,0.0
9.23076923076923,0.0
9.538461538461538,0.0
9.846153846153847,21.0
10.153846153846153,0.0
10.461538461538462,0.0
10.76923076923077,9.0
11.076923076923077,0.0
11.384615384615385,0.0
11.692307692307693,0.0
12.0,6.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.636986301369863,0.0
8.636986301369863,110.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.30769, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 12]
Mean estimate of displayed sample: 8.637 ± 0.19295 (95% CI)</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula>Pr[&lt;= T_scs] (&lt;&gt; (sum(s : id_s_t) Survivor(s).Safe) &gt;= (SURVIVORS_QTY * Surv_p_always_safe/100) and globalTime &lt;= T_scs)</formula>
			<comment>A percentage Surv_p_always_safe of all survivors is always guaranteed to reach a safe state within T_scs</comment>
			<result outcome="success" type="interval" value="≥ 0.97505 (95% CI)" timestamp="2024-07-22 16:14:28 +0200">
				<option key="--epsilon" value="0.025"/>
				<details>≥ 0.97505 (95% CI)</details>
				<plot title="Probability Density Distribution" xaxis="run duration in time" yaxis="probability density">
					<series title="density" type="b(0.769161)" color="0x0000ff" encoding="csv">4.000903099076822,0.9439208618442486
4.770064399147836,0.30276706889343824
5.53922569921885,0.0
6.308386999289864,0.0
7.077548299360878,0.0
7.846709599431891,0.0
8.615870899502905,0.0
9.385032199573917,0.0
10.154193499644933,0.0
10.923354799715945,0.0
11.69251609978696,0.03561965516393391
12.461677399857972,0.0
13.230838699928986,0.0
14.0,0.017809827581966954
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">4.847597796026592,0.0
4.847597796026592,0.9439208618442486
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.76916, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [4.001, 14]
Mean estimate of displayed sample: 4.848 ± 0.2718 (95% CI)</comment>
				</plot>
				<plot title="Probability Density Confidence Intervals" xaxis="run duration in time" yaxis="probability density">
					<series title="upper limit" type="b(0.769161)" color="0xa0a0ff" encoding="csv">4.000903099076822,0.796506964072931
4.770064399147836,0.30992697843840633
5.53922569921885,0.0249497761119478
6.308386999289864,0.0249497761119478
7.077548299360878,0.0249497761119478
7.846709599431891,0.0249497761119478
8.615870899502905,0.0249497761119478
9.385032199573917,0.0249497761119478
10.154193499644933,0.0249497761119478
10.923354799715945,0.0249497761119478
11.69251609978696,0.0686605217162876
12.461677399857972,0.0249497761119478
13.230838699928986,0.0249497761119478
14.0,0.0486066160447542
					</series>
					<series title="lower limit" type="b(0.769161)" color="0x0000ff" encoding="csv">4.000903099076822,0.6461349055854815
4.770064399147836,0.16698451387096655
5.53922569921885,0.0
6.308386999289864,0.0
7.077548299360878,0.0
7.846709599431891,0.0
8.615870899502905,0.0
9.385032199573917,0.0
10.154193499644933,0.0
10.923354799715945,0.0
11.69251609978696,0.007514221921488358
12.461677399857972,0.0
13.230838699928986,0.0
14.0,0.0016632943938784095
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">4.847597796026592,0.0
4.847597796026592,1.035552573952164
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.76916, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [4.001, 14]
Mean estimate of displayed sample: 4.848 ± 0.2718 (95% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="probability" type="b(0.769161)" color="0x0000ff" encoding="csv">4.000903099076822,0.726027397260274
4.770064399147836,0.2328767123287671
5.53922569921885,0.0
6.308386999289864,0.0
7.077548299360878,0.0
7.846709599431891,0.0
8.615870899502905,0.0
9.385032199573917,0.0
10.154193499644933,0.0
10.923354799715945,0.0
11.69251609978696,0.0273972602739726
12.461677399857972,0.0
13.230838699928986,0.0
14.0,0.0136986301369863
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">4.847597796026592,0.0
4.847597796026592,0.726027397260274
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.76916, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [4.001, 14]
Mean estimate of displayed sample: 4.848 ± 0.2718 (95% CI)</comment>
				</plot>
				<plot title="Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="b(0.769161)" color="0xa0a0ff" encoding="csv">4.000903099076822,0.796506964072931
4.770064399147836,0.30992697843840633
5.53922569921885,0.0249497761119478
6.308386999289864,0.0249497761119478
7.077548299360878,0.0249497761119478
7.846709599431891,0.0249497761119478
8.615870899502905,0.0249497761119478
9.385032199573917,0.0249497761119478
10.154193499644933,0.0249497761119478
10.923354799715945,0.0249497761119478
11.69251609978696,0.0686605217162876
12.461677399857972,0.0249497761119478
13.230838699928986,0.0249497761119478
14.0,0.0486066160447542
					</series>
					<series title="lower limit" type="b(0.769161)" color="0x0000ff" encoding="csv">4.000903099076822,0.6461349055854815
4.770064399147836,0.16698451387096655
5.53922569921885,0.0
6.308386999289864,0.0
7.077548299360878,0.0
7.846709599431891,0.0
8.615870899502905,0.0
9.385032199573917,0.0
10.154193499644933,0.0
10.923354799715945,0.0
11.69251609978696,0.007514221921488358
12.461677399857972,0.0
13.230838699928986,0.0
14.0,0.0016632943938784095
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">4.847597796026592,0.0
4.847597796026592,0.796506964072931
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.76916, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [4.001, 14]
Mean estimate of displayed sample: 4.848 ± 0.2718 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">4.000903099076822,0.0
4.770064399147836,0.726027397260274
5.53922569921885,0.958904109589041
6.308386999289864,0.958904109589041
7.077548299360878,0.958904109589041
7.846709599431891,0.958904109589041
8.615870899502905,0.958904109589041
9.385032199573917,0.958904109589041
10.154193499644933,0.958904109589041
10.923354799715945,0.958904109589041
11.69251609978696,0.958904109589041
12.461677399857972,0.9863013698630136
13.230838699928986,0.9863013698630136
14.0,0.9863013698630136
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">4.847597796026592,0.0
4.847597796026592,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.76916, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [4.001, 14]
Mean estimate of displayed sample: 4.848 ± 0.2718 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">4.000903099076822,0.0249497761119478
4.770064399147836,0.796506964072931
5.53922569921885,0.9847715047671425
6.308386999289864,0.9847715047671425
7.077548299360878,0.9847715047671425
7.846709599431891,0.9847715047671425
8.615870899502905,0.9847715047671425
9.385032199573917,0.9847715047671425
10.154193499644933,0.9847715047671425
10.923354799715945,0.9847715047671425
11.69251609978696,0.9847715047671425
12.461677399857972,0.9983367056061216
13.230838699928986,0.9983367056061216
14.0,0.9983367056061216
					</series>
					<series title="lower limit" type="k" color="0xdd0000" encoding="csv">4.000903099076822,0.0
4.770064399147836,0.6461349055854815
5.53922569921885,0.9126995655394615
6.308386999289864,0.9126995655394615
7.077548299360878,0.9126995655394615
7.846709599431891,0.9126995655394615
8.615870899502905,0.9126995655394615
9.385032199573917,0.9126995655394615
10.154193499644933,0.9126995655394615
10.923354799715945,0.9126995655394615
11.69251609978696,0.9126995655394615
12.461677399857972,0.9513933839552458
13.230838699928986,0.9513933839552458
14.0,0.9513933839552458
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">4.000903099076822,0.0
4.770064399147836,0.726027397260274
5.53922569921885,0.958904109589041
6.308386999289864,0.958904109589041
7.077548299360878,0.958904109589041
7.846709599431891,0.958904109589041
8.615870899502905,0.958904109589041
9.385032199573917,0.958904109589041
10.154193499644933,0.958904109589041
10.923354799715945,0.958904109589041
11.69251609978696,0.958904109589041
12.461677399857972,0.9863013698630136
13.230838699928986,0.9863013698630136
14.0,0.9863013698630136
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">4.847597796026592,0.0
4.847597796026592,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.76916, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [4.001, 14]
Mean estimate of displayed sample: 4.848 ± 0.2718 (95% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="run duration in time" yaxis="count">
					<series title="count" type="b(0.769161)" color="0x0000ff" encoding="csv">4.000903099076822,106.0
4.770064399147836,34.0
5.53922569921885,0.0
6.308386999289864,0.0
7.077548299360878,0.0
7.846709599431891,0.0
8.615870899502905,0.0
9.385032199573917,0.0
10.154193499644933,0.0
10.923354799715945,0.0
11.69251609978696,4.0
12.461677399857972,0.0
13.230838699928986,0.0
14.0,2.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">4.847597796026592,0.0
4.847597796026592,106.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.76916, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [4.001, 14]
Mean estimate of displayed sample: 4.848 ± 0.2718 (95% CI)</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula>Pr[&lt;= T_scs] (&lt;&gt; (sum(v : id_v_t) Victim(v).Safe) &gt;= (VICTIMS_QTY * Vict_p_always_safe/100) and globalTime &lt;= T_scs)</formula>
			<comment>A percentage Vict_p_always_safe of all victims is always guaranteed to reach a safe state within T_scs</comment>
			<result outcome="success" type="interval" value="≥ 0.97505 (95% CI)" timestamp="2024-07-22 16:14:29 +0200">
				<option key="--epsilon" value="0.025"/>
				<details>≥ 0.97505 (95% CI)</details>
				<plot title="Probability Density Distribution" xaxis="run duration in time" yaxis="probability density">
					<series title="density" type="b(0.153846)" color="0x0000ff" encoding="csv">6.0,4.318493150684931
6.153846153846154,0.0
6.3076923076923075,0.0
6.461538461538462,0.0
6.615384615384615,0.0
6.769230769230769,0.0
6.923076923076923,1.1575342465753424
7.076923076923077,0.0
7.230769230769231,0.0
7.384615384615385,0.0
7.538461538461538,0.0
7.6923076923076925,0.0
7.846153846153847,0.0
8.0,1.023972602739726
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.493150684931507,0.0
6.493150684931507,4.318493150684931
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.4932 ± 0.12338 (95% CI)</comment>
				</plot>
				<plot title="Probability Density Confidence Intervals" xaxis="run duration in time" yaxis="probability density">
					<series title="upper limit" type="b(0.153846)" color="0xa0a0ff" encoding="csv">6.0,0.7403330460058705
6.153846153846154,0.0249497761119478
6.3076923076923075,0.0249497761119478
6.461538461538462,0.0249497761119478
6.615384615384615,0.0249497761119478
6.769230769230769,0.0249497761119478
6.923076923076923,0.2499413138343342
7.076923076923077,0.0249497761119478
7.230769230769231,0.0249497761119478
7.384615384615385,0.0249497761119478
7.538461538461538,0.0249497761119478
7.6923076923076925,0.0249497761119478
7.846153846153847,0.0249497761119478
8.0,0.2269432606663082
					</series>
					<series title="lower limit" type="b(0.153846)" color="0x0000ff" encoding="csv">6.0,0.581609273386681
6.153846153846154,0.0
6.3076923076923075,0.0
6.461538461538462,0.0
6.615384615384615,0.0
6.769230769230769,0.0
6.923076923076923,0.11975068733535783
7.076923076923077,0.0
7.230769230769231,0.0
7.384615384615385,0.0
7.538461538461538,0.0
7.6923076923076925,0.0
7.846153846153847,0.0
8.0,0.10256137531316813
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.493150684931507,0.0
6.493150684931507,4.8121647990381575
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.4932 ± 0.12338 (95% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="probability" type="b(0.153846)" color="0x0000ff" encoding="csv">6.0,0.6643835616438356
6.153846153846154,0.0
6.3076923076923075,0.0
6.461538461538462,0.0
6.615384615384615,0.0
6.769230769230769,0.0
6.923076923076923,0.1780821917808219
7.076923076923077,0.0
7.230769230769231,0.0
7.384615384615385,0.0
7.538461538461538,0.0
7.6923076923076925,0.0
7.846153846153847,0.0
8.0,0.15753424657534246
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.493150684931507,0.0
6.493150684931507,0.6643835616438356
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.4932 ± 0.12338 (95% CI)</comment>
				</plot>
				<plot title="Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="b(0.153846)" color="0xa0a0ff" encoding="csv">6.0,0.7403330460058705
6.153846153846154,0.0249497761119478
6.3076923076923075,0.0249497761119478
6.461538461538462,0.0249497761119478
6.615384615384615,0.0249497761119478
6.769230769230769,0.0249497761119478
6.923076923076923,0.2499413138343342
7.076923076923077,0.0249497761119478
7.230769230769231,0.0249497761119478
7.384615384615385,0.0249497761119478
7.538461538461538,0.0249497761119478
7.6923076923076925,0.0249497761119478
7.846153846153847,0.0249497761119478
8.0,0.2269432606663082
					</series>
					<series title="lower limit" type="b(0.153846)" color="0x0000ff" encoding="csv">6.0,0.581609273386681
6.153846153846154,0.0
6.3076923076923075,0.0
6.461538461538462,0.0
6.615384615384615,0.0
6.769230769230769,0.0
6.923076923076923,0.11975068733535783
7.076923076923077,0.0
7.230769230769231,0.0
7.384615384615385,0.0
7.538461538461538,0.0
7.6923076923076925,0.0
7.846153846153847,0.0
8.0,0.10256137531316813
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.493150684931507,0.0
6.493150684931507,0.7403330460058705
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.4932 ± 0.12338 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">6.0,0.0
6.153846153846154,0.6643835616438356
6.3076923076923075,0.6643835616438356
6.461538461538462,0.6643835616438356
6.615384615384615,0.6643835616438356
6.769230769230769,0.6643835616438356
6.923076923076923,0.6643835616438356
7.076923076923077,0.8424657534246576
7.230769230769231,0.8424657534246576
7.384615384615385,0.8424657534246576
7.538461538461538,0.8424657534246576
7.6923076923076925,0.8424657534246576
7.846153846153847,0.8424657534246576
8.0,0.8424657534246576
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.493150684931507,0.0
6.493150684931507,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.4932 ± 0.12338 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">6.0,0.0249497761119478
6.153846153846154,0.7403330460058705
6.3076923076923075,0.7403330460058705
6.461538461538462,0.7403330460058705
6.615384615384615,0.7403330460058705
6.769230769230769,0.7403330460058705
6.923076923076923,0.7403330460058705
7.076923076923077,0.8974386246868319
7.230769230769231,0.8974386246868319
7.384615384615385,0.8974386246868319
7.538461538461538,0.8974386246868319
7.6923076923076925,0.8974386246868319
7.846153846153847,0.8974386246868319
8.0,0.8974386246868319
					</series>
					<series title="lower limit" type="k" color="0xdd0000" encoding="csv">6.0,0.0
6.153846153846154,0.581609273386681
6.3076923076923075,0.581609273386681
6.461538461538462,0.581609273386681
6.615384615384615,0.581609273386681
6.769230769230769,0.581609273386681
6.923076923076923,0.581609273386681
7.076923076923077,0.7730567393336918
7.230769230769231,0.7730567393336918
7.384615384615385,0.7730567393336918
7.538461538461538,0.7730567393336918
7.6923076923076925,0.7730567393336918
7.846153846153847,0.7730567393336918
8.0,0.7730567393336918
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">6.0,0.0
6.153846153846154,0.6643835616438356
6.3076923076923075,0.6643835616438356
6.461538461538462,0.6643835616438356
6.615384615384615,0.6643835616438356
6.769230769230769,0.6643835616438356
6.923076923076923,0.6643835616438356
7.076923076923077,0.8424657534246576
7.230769230769231,0.8424657534246576
7.384615384615385,0.8424657534246576
7.538461538461538,0.8424657534246576
7.6923076923076925,0.8424657534246576
7.846153846153847,0.8424657534246576
8.0,0.8424657534246576
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.493150684931507,0.0
6.493150684931507,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.4932 ± 0.12338 (95% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="run duration in time" yaxis="count">
					<series title="count" type="b(0.153846)" color="0x0000ff" encoding="csv">6.0,97.0
6.153846153846154,0.0
6.3076923076923075,0.0
6.461538461538462,0.0
6.615384615384615,0.0
6.769230769230769,0.0
6.923076923076923,26.0
7.076923076923077,0.0
7.230769230769231,0.0
7.384615384615385,0.0
7.538461538461538,0.0
7.6923076923076925,0.0
7.846153846153847,0.0
8.0,23.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.493150684931507,0.0
6.493150684931507,97.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.4932 ± 0.12338 (95% CI)</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula>Pr[&lt;= T_scs] (&lt;&gt; ((sum(s : id_s_t) Survivor(s).Safe) + (sum(v : id_v_t) Victim(v).Safe)) &gt;= ((SURVIVORS_QTY + VICTIMS_QTY) * Civilians_p_sometimes_safe/100) and globalTime &lt;= T_scs)</formula>
			<comment>It possible, for a percentage N_perc_sometimes_safe of all civilians, to reach a safe state within T_scs</comment>
			<result outcome="success" type="interval" value="≥ 0.97505 (95% CI)" timestamp="2024-07-22 16:14:29 +0200">
				<option key="--epsilon" value="0.025"/>
				<details>≥ 0.97505 (95% CI)</details>
				<plot title="Probability Density Distribution" xaxis="run duration in time" yaxis="probability density">
					<series title="density" type="b(0.461538)" color="0x0000ff" encoding="csv">8.0,1.7363013698630136
8.461538461538462,0.0
8.923076923076923,0.0
9.384615384615385,0.0
9.846153846153847,0.2226027397260274
10.307692307692308,0.0
10.76923076923077,0.08904109589041095
11.23076923076923,0.0
11.692307692307693,0.08904109589041095
12.153846153846153,0.0
12.615384615384617,0.0
13.076923076923077,0.0
13.538461538461538,0.0
14.0,0.02968036529680365
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.575342465753424,0.0
8.575342465753424,1.7363013698630136
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.46154, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 14]
Mean estimate of displayed sample: 8.5753 ± 0.20765 (95% CI)</comment>
				</plot>
				<plot title="Probability Density Confidence Intervals" xaxis="run duration in time" yaxis="probability density">
					<series title="upper limit" type="b(0.461538)" color="0xa0a0ff" encoding="csv">8.0,0.8627550531025313
8.461538461538462,0.0249497761119478
8.923076923076923,0.0249497761119478
9.384615384615385,0.0249497761119478
9.846153846153847,0.16378809854908924
10.307692307692308,0.0249497761119478
10.76923076923077,0.08730043446053852
11.23076923076923,0.0249497761119478
11.692307692307693,0.08730043446053852
12.153846153846153,0.0249497761119478
12.615384615384617,0.0249497761119478
13.076923076923077,0.0249497761119478
13.538461538461538,0.0249497761119478
14.0,0.0486066160447542
					</series>
					<series title="lower limit" type="b(0.461538)" color="0x0000ff" encoding="csv">8.0,0.7273531503971049
8.461538461538462,0.0
8.923076923076923,0.0
9.384615384615385,0.0
9.846153846153847,0.05865258523377814
10.307692307692308,0.0
10.76923076923077,0.015228495232857476
11.23076923076923,0.0
11.692307692307693,0.015228495232857476
12.153846153846153,0.0
12.615384615384617,0.0
13.076923076923077,0.0
13.538461538461538,0.0
14.0,0.0016632943938784095
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.575342465753424,0.0
8.575342465753424,1.8693026150554843
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.46154, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 14]
Mean estimate of displayed sample: 8.5753 ± 0.20765 (95% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="probability" type="b(0.461538)" color="0x0000ff" encoding="csv">8.0,0.8013698630136986
8.461538461538462,0.0
8.923076923076923,0.0
9.384615384615385,0.0
9.846153846153847,0.10273972602739725
10.307692307692308,0.0
10.76923076923077,0.0410958904109589
11.23076923076923,0.0
11.692307692307693,0.0410958904109589
12.153846153846153,0.0
12.615384615384617,0.0
13.076923076923077,0.0
13.538461538461538,0.0
14.0,0.0136986301369863
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.575342465753424,0.0
8.575342465753424,0.8013698630136986
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.46154, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 14]
Mean estimate of displayed sample: 8.5753 ± 0.20765 (95% CI)</comment>
				</plot>
				<plot title="Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="b(0.461538)" color="0xa0a0ff" encoding="csv">8.0,0.8627550531025313
8.461538461538462,0.0249497761119478
8.923076923076923,0.0249497761119478
9.384615384615385,0.0249497761119478
9.846153846153847,0.16378809854908924
10.307692307692308,0.0249497761119478
10.76923076923077,0.08730043446053852
11.23076923076923,0.0249497761119478
11.692307692307693,0.08730043446053852
12.153846153846153,0.0249497761119478
12.615384615384617,0.0249497761119478
13.076923076923077,0.0249497761119478
13.538461538461538,0.0249497761119478
14.0,0.0486066160447542
					</series>
					<series title="lower limit" type="b(0.461538)" color="0x0000ff" encoding="csv">8.0,0.7273531503971049
8.461538461538462,0.0
8.923076923076923,0.0
9.384615384615385,0.0
9.846153846153847,0.05865258523377814
10.307692307692308,0.0
10.76923076923077,0.015228495232857476
11.23076923076923,0.0
11.692307692307693,0.015228495232857476
12.153846153846153,0.0
12.615384615384617,0.0
13.076923076923077,0.0
13.538461538461538,0.0
14.0,0.0016632943938784095
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.575342465753424,0.0
8.575342465753424,0.8627550531025313
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.46154, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 14]
Mean estimate of displayed sample: 8.5753 ± 0.20765 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">8.0,0.0
8.461538461538462,0.8013698630136986
8.923076923076923,0.8013698630136986
9.384615384615385,0.8013698630136986
9.846153846153847,0.8013698630136986
10.307692307692308,0.9041095890410958
10.76923076923077,0.9041095890410958
11.23076923076923,0.9452054794520548
11.692307692307693,0.9452054794520548
12.153846153846153,0.9863013698630136
12.615384615384617,0.9863013698630136
13.076923076923077,0.9863013698630136
13.538461538461538,0.9863013698630136
14.0,0.9863013698630136
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.575342465753424,0.0
8.575342465753424,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.46154, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 14]
Mean estimate of displayed sample: 8.5753 ± 0.20765 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">8.0,0.0249497761119478
8.461538461538462,0.8627550531025313
8.923076923076923,0.8627550531025313
9.384615384615385,0.8627550531025313
9.846153846153847,0.8627550531025313
10.307692307692308,0.946578359888068
10.76923076923077,0.946578359888068
11.23076923076923,0.9760497154794583
11.692307692307693,0.9760497154794583
12.153846153846153,0.9983367056061216
12.615384615384617,0.9983367056061216
13.076923076923077,0.9983367056061216
13.538461538461538,0.9983367056061216
14.0,0.9983367056061216
					</series>
					<series title="lower limit" type="k" color="0xdd0000" encoding="csv">8.0,0.0
8.461538461538462,0.7273531503971049
8.923076923076923,0.7273531503971049
9.384615384615385,0.7273531503971049
9.846153846153847,0.7273531503971049
10.307692307692308,0.8443468061913708
10.76923076923077,0.8443468061913708
11.23076923076923,0.8948889156523929
11.692307692307693,0.8948889156523929
12.153846153846153,0.9513933839552458
12.615384615384617,0.9513933839552458
13.076923076923077,0.9513933839552458
13.538461538461538,0.9513933839552458
14.0,0.9513933839552458
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">8.0,0.0
8.461538461538462,0.8013698630136986
8.923076923076923,0.8013698630136986
9.384615384615385,0.8013698630136986
9.846153846153847,0.8013698630136986
10.307692307692308,0.9041095890410958
10.76923076923077,0.9041095890410958
11.23076923076923,0.9452054794520548
11.692307692307693,0.9452054794520548
12.153846153846153,0.9863013698630136
12.615384615384617,0.9863013698630136
13.076923076923077,0.9863013698630136
13.538461538461538,0.9863013698630136
14.0,0.9863013698630136
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.575342465753424,0.0
8.575342465753424,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.46154, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 14]
Mean estimate of displayed sample: 8.5753 ± 0.20765 (95% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="run duration in time" yaxis="count">
					<series title="count" type="b(0.461538)" color="0x0000ff" encoding="csv">8.0,117.0
8.461538461538462,0.0
8.923076923076923,0.0
9.384615384615385,0.0
9.846153846153847,15.0
10.307692307692308,0.0
10.76923076923077,6.0
11.23076923076923,0.0
11.692307692307693,6.0
12.153846153846153,0.0
12.615384615384617,0.0
13.076923076923077,0.0
13.538461538461538,0.0
14.0,2.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">8.575342465753424,0.0
8.575342465753424,117.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.46154, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [8, 14]
Mean estimate of displayed sample: 8.5753 ± 0.20765 (95% CI)</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula>Pr[&lt;= T_scs] (&lt;&gt; (sum(s : id_s_t) Survivor(s).Safe) &gt;= (SURVIVORS_QTY * Surv_p_sometimes_safe/100) and globalTime &lt;= T_scs)</formula>
			<comment>It possible, for a percentage Surv_p_sometimes_safe of all survivors, to reach a safe state within T_scs</comment>
			<result outcome="success" type="interval" value="≥ 0.97505 (95% CI)" timestamp="2024-07-22 16:14:29 +0200">
				<option key="--epsilon" value="0.025"/>
				<details>≥ 0.97505 (95% CI)</details>
				<plot title="Probability Density Distribution" xaxis="run duration in time" yaxis="probability density">
					<series title="density" type="b(0.615385)" color="0x0000ff" encoding="csv">10.0,0.5008561643835616
10.615384615384615,0.723458904109589
11.23076923076923,0.0
11.846153846153847,0.05565068493150684
12.461538461538462,0.0
13.076923076923077,0.0
13.692307692307693,0.12243150684931506
14.307692307692308,0.0
14.923076923076923,0.12243150684931506
15.538461538461538,0.07791095890410958
16.153846153846153,0.0
16.76923076923077,0.01113013698630137
17.384615384615387,0.0
18.0,0.01113013698630137
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">11.582191780821917,0.0
11.582191780821917,0.723458904109589
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.61538, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [10, 18]
Mean estimate of displayed sample: 11.582 ± 0.31435 (95% CI)</comment>
				</plot>
				<plot title="Probability Density Confidence Intervals" xaxis="run duration in time" yaxis="probability density">
					<series title="upper limit" type="b(0.615385)" color="0xa0a0ff" encoding="csv">10.0,0.38990205857834925
10.615384615384615,0.5296524032716037
11.23076923076923,0.0249497761119478
11.846153846153847,0.07810853612688654
12.461538461538462,0.0249497761119478
13.076923076923077,0.0249497761119478
13.692307692307693,0.1308087660215856
14.307692307692308,0.0249497761119478
14.923076923076923,0.1308087660215856
15.538461538461538,0.09628914978819549
16.153846153846153,0.0249497761119478
16.76923076923077,0.03756979309338498
17.384615384615387,0.0249497761119478
18.0,0.03756979309338498
					</series>
					<series title="lower limit" type="b(0.615385)" color="0x0000ff" encoding="csv">10.0,0.2345079976938597
10.615384615384615,0.36302753513407615
11.23076923076923,0.0
11.846153846153847,0.011211578448912851
12.461538461538462,0.0
13.076923076923077,0.0
13.692307692307693,0.03820955642871147
14.307692307692308,0.0
14.923076923076923,0.03820955642871147
15.538461538461538,0.019491008640492392
16.153846153846153,0.0
16.76923076923077,1.7339460914480372E-4
17.384615384615387,0.0
18.0,1.7339460914480372E-4
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">11.582191780821917,0.0
11.582191780821917,0.8606851553163559
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.61538, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [10, 18]
Mean estimate of displayed sample: 11.582 ± 0.31435 (95% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="probability" type="b(0.615385)" color="0x0000ff" encoding="csv">10.0,0.3082191780821918
10.615384615384615,0.4452054794520548
11.23076923076923,0.0
11.846153846153847,0.03424657534246575
12.461538461538462,0.0
13.076923076923077,0.0
13.692307692307693,0.07534246575342465
14.307692307692308,0.0
14.923076923076923,0.07534246575342465
15.538461538461538,0.04794520547945205
16.153846153846153,0.0
16.76923076923077,0.00684931506849315
17.384615384615387,0.0
18.0,0.00684931506849315
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">11.582191780821917,0.0
11.582191780821917,0.4452054794520548
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.61538, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [10, 18]
Mean estimate of displayed sample: 11.582 ± 0.31435 (95% CI)</comment>
				</plot>
				<plot title="Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="b(0.615385)" color="0xa0a0ff" encoding="csv">10.0,0.38990205857834925
10.615384615384615,0.5296524032716037
11.23076923076923,0.0249497761119478
11.846153846153847,0.07810853612688654
12.461538461538462,0.0249497761119478
13.076923076923077,0.0249497761119478
13.692307692307693,0.1308087660215856
14.307692307692308,0.0249497761119478
14.923076923076923,0.1308087660215856
15.538461538461538,0.09628914978819549
16.153846153846153,0.0249497761119478
16.76923076923077,0.03756979309338498
17.384615384615387,0.0249497761119478
18.0,0.03756979309338498
					</series>
					<series title="lower limit" type="b(0.615385)" color="0x0000ff" encoding="csv">10.0,0.2345079976938597
10.615384615384615,0.36302753513407615
11.23076923076923,0.0
11.846153846153847,0.011211578448912851
12.461538461538462,0.0
13.076923076923077,0.0
13.692307692307693,0.03820955642871147
14.307692307692308,0.0
14.923076923076923,0.03820955642871147
15.538461538461538,0.019491008640492392
16.153846153846153,0.0
16.76923076923077,1.7339460914480372E-4
17.384615384615387,0.0
18.0,1.7339460914480372E-4
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">11.582191780821917,0.0
11.582191780821917,0.5296524032716037
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.61538, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [10, 18]
Mean estimate of displayed sample: 11.582 ± 0.31435 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">10.0,0.0
10.615384615384615,0.3082191780821918
11.23076923076923,0.7534246575342466
11.846153846153847,0.7534246575342466
12.461538461538462,0.7876712328767124
13.076923076923077,0.7876712328767124
13.692307692307693,0.7876712328767124
14.307692307692308,0.863013698630137
14.923076923076923,0.863013698630137
15.538461538461538,0.9383561643835616
16.153846153846153,0.9863013698630136
16.76923076923077,0.9863013698630136
17.384615384615387,0.9931506849315068
18.0,0.9931506849315068
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">11.582191780821917,0.0
11.582191780821917,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.61538, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [10, 18]
Mean estimate of displayed sample: 11.582 ± 0.31435 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">10.0,0.0249497761119478
10.615384615384615,0.38990205857834925
11.23076923076923,0.8209385952735557
11.846153846153847,0.8209385952735557
12.461538461538462,0.8509412043238075
13.076923076923077,0.8509412043238075
13.692307692307693,0.8509412043238075
14.307692307692308,0.9142740059217491
14.923076923076923,0.9142740059217491
15.538461538461538,0.9714278627553135
16.153846153846153,0.9983367056061216
16.76923076923077,0.9983367056061216
17.384615384615387,0.9998266053908552
18.0,0.9998266053908552
					</series>
					<series title="lower limit" type="k" color="0xdd0000" encoding="csv">10.0,0.0
10.615384615384615,0.2345079976938597
11.23076923076923,0.6753366870326926
11.846153846153847,0.6753366870326926
12.461538461538462,0.7123617217748033
13.076923076923077,0.7123617217748033
13.692307692307693,0.7123617217748033
14.307692307692308,0.7963919475319202
14.923076923076923,0.7963919475319202
15.538461538461538,0.8862074399964394
16.153846153846153,0.9513933839552458
16.76923076923077,0.9513933839552458
17.384615384615387,0.9624302069066151
18.0,0.9624302069066151
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">10.0,0.0
10.615384615384615,0.3082191780821918
11.23076923076923,0.7534246575342466
11.846153846153847,0.7534246575342466
12.461538461538462,0.7876712328767124
13.076923076923077,0.7876712328767124
13.692307692307693,0.7876712328767124
14.307692307692308,0.863013698630137
14.923076923076923,0.863013698630137
15.538461538461538,0.9383561643835616
16.153846153846153,0.9863013698630136
16.76923076923077,0.9863013698630136
17.384615384615387,0.9931506849315068
18.0,0.9931506849315068
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">11.582191780821917,0.0
11.582191780821917,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.61538, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [10, 18]
Mean estimate of displayed sample: 11.582 ± 0.31435 (95% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="run duration in time" yaxis="count">
					<series title="count" type="b(0.615385)" color="0x0000ff" encoding="csv">10.0,45.0
10.615384615384615,65.0
11.23076923076923,0.0
11.846153846153847,5.0
12.461538461538462,0.0
13.076923076923077,0.0
13.692307692307693,11.0
14.307692307692308,0.0
14.923076923076923,11.0
15.538461538461538,7.0
16.153846153846153,0.0
16.76923076923077,1.0
17.384615384615387,0.0
18.0,1.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">11.582191780821917,0.0
11.582191780821917,65.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.61538, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [10, 18]
Mean estimate of displayed sample: 11.582 ± 0.31435 (95% CI)</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula>Pr[&lt;= T_scs] (&lt;&gt; (sum(v : id_v_t) Victim(v).Safe) &gt;= (VICTIMS_QTY * Vict_p_sometimes_safe/100) and globalTime &lt;= T_scs)</formula>
			<comment>It possible, for a percentage Vict_p_sometimes_safe of all victims, to reach a safe state within T_scs</comment>
			<result outcome="success" type="interval" value="≥ 0.97505 (95% CI)" timestamp="2024-07-22 16:14:30 +0200">
				<option key="--epsilon" value="0.025"/>
				<details>≥ 0.97505 (95% CI)</details>
				<plot title="Probability Density Distribution" xaxis="run duration in time" yaxis="probability density">
					<series title="density" type="b(0.153846)" color="0x0000ff" encoding="csv">6.0,3.8732876712328763
6.153846153846154,0.0
6.3076923076923075,0.0
6.461538461538462,0.0
6.615384615384615,0.0
6.769230769230769,0.0
6.923076923076923,1.6472602739726026
7.076923076923077,0.0
7.230769230769231,0.0
7.384615384615385,0.0
7.538461538461538,0.0
7.6923076923076925,0.0
7.846153846153847,0.0
8.0,0.9794520547945205
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.554794520547945,0.0
6.554794520547945,3.8732876712328768
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.5548 ± 0.12155 (95% CI)</comment>
				</plot>
				<plot title="Probability Density Confidence Intervals" xaxis="run duration in time" yaxis="probability density">
					<series title="upper limit" type="b(0.153846)" color="0xa0a0ff" encoding="csv">6.0,0.6762166309911136
6.153846153846154,0.0249497761119478
6.3076923076923075,0.0249497761119478
6.461538461538462,0.0249497761119478
6.615384615384615,0.0249497761119478
6.769230769230769,0.0249497761119478
6.923076923076923,0.3319967326492217
7.076923076923077,0.0249497761119478
7.230769230769231,0.0249497761119478
7.384615384615385,0.0249497761119478
7.538461538461538,0.0249497761119478
7.6923076923076925,0.0249497761119478
7.846153846153847,0.0249497761119478
8.0,0.21920493559263696
					</series>
					<series title="lower limit" type="b(0.153846)" color="0x0000ff" encoding="csv">6.0,0.5115909359037795
6.153846153846154,0.0
6.3076923076923075,0.0
6.461538461538462,0.0
6.615384615384615,0.0
6.769230769230769,0.0
6.923076923076923,0.18513552969711836
7.076923076923077,0.0
7.230769230769231,0.0
7.384615384615385,0.0
7.538461538461538,0.0
7.6923076923076925,0.0
7.846153846153847,0.0
8.0,0.09690736914352462
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.554794520547945,0.0
6.554794520547945,4.395408101442238
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.5548 ± 0.12155 (95% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="probability" type="b(0.153846)" color="0x0000ff" encoding="csv">6.0,0.5958904109589042
6.153846153846154,0.0
6.3076923076923075,0.0
6.461538461538462,0.0
6.615384615384615,0.0
6.769230769230769,0.0
6.923076923076923,0.2534246575342466
7.076923076923077,0.0
7.230769230769231,0.0
7.384615384615385,0.0
7.538461538461538,0.0
7.6923076923076925,0.0
7.846153846153847,0.0
8.0,0.1506849315068493
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.554794520547945,0.0
6.554794520547945,0.5958904109589042
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.5548 ± 0.12155 (95% CI)</comment>
				</plot>
				<plot title="Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="b(0.153846)" color="0xa0a0ff" encoding="csv">6.0,0.6762166309911136
6.153846153846154,0.0249497761119478
6.3076923076923075,0.0249497761119478
6.461538461538462,0.0249497761119478
6.615384615384615,0.0249497761119478
6.769230769230769,0.0249497761119478
6.923076923076923,0.3319967326492217
7.076923076923077,0.0249497761119478
7.230769230769231,0.0249497761119478
7.384615384615385,0.0249497761119478
7.538461538461538,0.0249497761119478
7.6923076923076925,0.0249497761119478
7.846153846153847,0.0249497761119478
8.0,0.21920493559263696
					</series>
					<series title="lower limit" type="b(0.153846)" color="0x0000ff" encoding="csv">6.0,0.5115909359037795
6.153846153846154,0.0
6.3076923076923075,0.0
6.461538461538462,0.0
6.615384615384615,0.0
6.769230769230769,0.0
6.923076923076923,0.18513552969711836
7.076923076923077,0.0
7.230769230769231,0.0
7.384615384615385,0.0
7.538461538461538,0.0
7.6923076923076925,0.0
7.846153846153847,0.0
8.0,0.09690736914352462
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.554794520547945,0.0
6.554794520547945,0.6762166309911136
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.5548 ± 0.12155 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">6.0,0.0
6.153846153846154,0.5958904109589042
6.3076923076923075,0.5958904109589042
6.461538461538462,0.5958904109589042
6.615384615384615,0.5958904109589042
6.769230769230769,0.5958904109589042
6.923076923076923,0.5958904109589042
7.076923076923077,0.8493150684931506
7.230769230769231,0.8493150684931506
7.384615384615385,0.8493150684931506
7.538461538461538,0.8493150684931506
7.6923076923076925,0.8493150684931506
7.846153846153847,0.8493150684931506
8.0,0.8493150684931506
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.554794520547945,0.0
6.554794520547945,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.5548 ± 0.12155 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">6.0,0.0249497761119478
6.153846153846154,0.6762166309911136
6.3076923076923075,0.6762166309911136
6.461538461538462,0.6762166309911136
6.615384615384615,0.6762166309911136
6.769230769230769,0.6762166309911136
6.923076923076923,0.6762166309911136
7.076923076923077,0.9030926308564754
7.230769230769231,0.9030926308564754
7.384615384615385,0.9030926308564754
7.538461538461538,0.9030926308564754
7.6923076923076925,0.9030926308564754
7.846153846153847,0.9030926308564754
8.0,0.9030926308564754
					</series>
					<series title="lower limit" type="k" color="0xdd0000" encoding="csv">6.0,0.0
6.153846153846154,0.5115909359037795
6.3076923076923075,0.5115909359037795
6.461538461538462,0.5115909359037795
6.615384615384615,0.5115909359037795
6.769230769230769,0.5115909359037795
6.923076923076923,0.5115909359037795
7.076923076923077,0.780795064407363
7.230769230769231,0.780795064407363
7.384615384615385,0.780795064407363
7.538461538461538,0.780795064407363
7.6923076923076925,0.780795064407363
7.846153846153847,0.780795064407363
8.0,0.780795064407363
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">6.0,0.0
6.153846153846154,0.5958904109589042
6.3076923076923075,0.5958904109589042
6.461538461538462,0.5958904109589042
6.615384615384615,0.5958904109589042
6.769230769230769,0.5958904109589042
6.923076923076923,0.5958904109589042
7.076923076923077,0.8493150684931506
7.230769230769231,0.8493150684931506
7.384615384615385,0.8493150684931506
7.538461538461538,0.8493150684931506
7.6923076923076925,0.8493150684931506
7.846153846153847,0.8493150684931506
8.0,0.8493150684931506
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.554794520547945,0.0
6.554794520547945,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.5548 ± 0.12155 (95% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="run duration in time" yaxis="count">
					<series title="count" type="b(0.153846)" color="0x0000ff" encoding="csv">6.0,87.0
6.153846153846154,0.0
6.3076923076923075,0.0
6.461538461538462,0.0
6.615384615384615,0.0
6.769230769230769,0.0
6.923076923076923,37.0
7.076923076923077,0.0
7.230769230769231,0.0
7.384615384615385,0.0
7.538461538461538,0.0
7.6923076923076925,0.0
7.846153846153847,0.0
8.0,22.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">6.554794520547945,0.0
6.554794520547945,87.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=0.15385, bucket count=14
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [6, 8]
Mean estimate of displayed sample: 6.5548 ± 0.12155 (95% CI)</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula>Pr[&lt;= T_scs] (&lt;&gt; n_helping_civilians &gt;= (SURVIVORS_QTY * Civilians_p_helping/100))</formula>
			<comment>A percentage Civilians_p_helping of all civilians is always guaranteed to help a victim before exiting the map</comment>
			<result outcome="success" type="interval" value="≥ 0.97505 (95% CI)" timestamp="2024-07-22 16:14:30 +0200">
				<option key="--epsilon" value="0.025"/>
				<details>≥ 0.97505 (95% CI)</details>
				<plot title="Probability Density Distribution" xaxis="run duration in time" yaxis="probability density">
					<series title="density" type="b(0.000000)" color="0x0000ff" encoding="csv">0.0,4.503599627370496E15
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">0.0,0.0
0.0,4.503599627370496E15
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=2.2204e-16, bucket count=1
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [0, 0]
Mean estimate of displayed sample: ≈ 0</comment>
				</plot>
				<plot title="Probability Density Confidence Intervals" xaxis="run duration in time" yaxis="probability density">
					<series title="upper limit" type="b(0.000000)" color="0xa0a0ff" encoding="csv">0.0,1.0
					</series>
					<series title="lower limit" type="b(0.000000)" color="0x0000ff" encoding="csv">0.0,0.9750502238880522
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">0.0,0.0
0.0,4.503599627370496E15
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=2.2204e-16, bucket count=1
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [0, 0]
Mean estimate of displayed sample: ≈ 0</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="probability" type="b(0.000000)" color="0x0000ff" encoding="csv">0.0,1.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">0.0,0.0
0.0,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=2.2204e-16, bucket count=1
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [0, 0]
Mean estimate of displayed sample: ≈ 0</comment>
				</plot>
				<plot title="Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="b(0.000000)" color="0xa0a0ff" encoding="csv">0.0,1.0
					</series>
					<series title="lower limit" type="b(0.000000)" color="0x0000ff" encoding="csv">0.0,0.9750502238880522
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">0.0,0.0
0.0,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=2.2204e-16, bucket count=1
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [0, 0]
Mean estimate of displayed sample: ≈ 0</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="run duration in time" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">0.0,0.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">0.0,0.0
0.0,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=2.2204e-16, bucket count=1
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [0, 0]
Mean estimate of displayed sample: ≈ 0</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="run duration in time" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">0.0,0.0249497761119478
					</series>
					<series title="lower limit" type="k" color="0xdd0000" encoding="csv">0.0,0.0
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">0.0,0.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">0.0,0.0
0.0,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=2.2204e-16, bucket count=1
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [0, 0]
Mean estimate of displayed sample: ≈ 0</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="run duration in time" yaxis="count">
					<series title="count" type="b(0.000000)" color="0x0000ff" encoding="csv">0.0,146.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">0.0,0.0
0.0,146.0
					</series>
					<comment>Parameters: α=0.05, ε=0.025, bucket width=2.2204e-16, bucket count=1
Runs: 146 in total, 146 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [0, 0]
Mean estimate of displayed sample: ≈ 0</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula>Pr[&lt;= 1000] ([] 	forall(i : id_s_t) not Survivor(i).Safe imply map[survivors[i].x][survivors[i].y] != FIRE and
			forall(i : id_v_t) not Victim(i).Safe imply map[victims[i].x][victims[i].y] != FIRE and
			forall(i : id_f_t) map[responders[i].x][responders[i].y] != FIRE
)</formula>
			<comment>It is always guaranteed that any person is never in the fire</comment>
			<result outcome="success" type="interval" value="≥ 0.97505 (95% CI)" timestamp="2024-07-22 16:14:39 +0200">
				<option key="--epsilon" value="0.025"/>
				<details>≥ 0.97505 (95% CI)</details>
			</result>
		</query>
		<query>
			<formula>Pr[&lt;= 1000] ([]	 	forall(s1 : id_s_t) forall(s2 : id_s_t) ( s1!=s2 and (not Survivor(s1).Safe) and (not Survivor(s2).Safe) ) imply survivors[s1] != survivors[s2] and
			forall(r1 : id_f_t) forall(r2 : id_f_t) ( r1!=r2 ) imply responders[r1] != responders[r2] and
			forall(s : id_s_t) forall(r : id_f_t) ( not Survivor(s).Safe and not Survivor(s).Reaching_victim and not Survivor(s).Helping_with_FR) imply survivors[s] != responders[r]
)
</formula>
			<comment>It is always guaranteed that two people are not in the same cell</comment>
			<result outcome="success" type="interval" value="≥ 0.97505 (95% CI)" timestamp="2024-07-22 16:14:47 +0200">
				<option key="--epsilon" value="0.025"/>
				<details>≥ 0.97505 (95% CI)</details>
			</result>
		</query>
		<query>
			<formula>Pr[&lt;= 1000] ([] 	(forall(i : id_s_t) !Survivor(i).Safe imply (survivors[i].x &lt; N and survivors[i].y &lt; M) and
			((survivors[i].x &lt; N and survivors[i].y &lt; M) imply !Survivor(i).Safe)) and
			(forall(j : id_v_t) !Victim(j).Safe imply (victims[j].x &lt; N and victims[j].y &lt; M) and
			((victims[j].x &lt; N and victims[j].y &lt; M) imply !Victim(j).Safe))
)</formula>
			<comment>It is always guaranteed that survivors and victims have a valid position if and only if they are safe</comment>
			<result outcome="success" type="interval" value="≥ 0.97505 (95% CI)" timestamp="2024-07-22 16:14:56 +0200">
				<option key="--epsilon" value="0.025"/>
				<details>≥ 0.97505 (95% CI)</details>
			</result>
		</query>
		<query>
			<formula>Pr[&lt;= 1000] ([]	forall(id : id_d_t)
		bounds[id].min_x &gt;= 0 and bounds[id].max_x &lt; N and
		bounds[id].min_y &gt;= 0 and bounds[id].max_y &lt; M and
		drones[id].x &gt;= bounds[id].min_x and drones[id].x &lt;= bounds[id].max_x and 
		drones[id].y &gt;= bounds[id].min_y and drones[id].y &lt;= bounds[id].max_y
)</formula>
			<comment>It always guaranteed that for each drone bounds are valid and it never goes out of its bounds</comment>
			<result outcome="success" type="interval" value="≥ 0.97505 (95% CI)" timestamp="2024-07-22 16:15:04 +0200">
				<option key="--epsilon" value="0.025"/>
				<details>≥ 0.97505 (95% CI)</details>
			</result>
		</query>
		<query>
			<formula>Pr[&lt;= 1000] ([] forall(i : id_s_t) Survivor(i).Moving imply not tileIsNearSomething(survivors[i], FIRE))</formula>
			<comment>It is always guaranteed that a survivor never moves near the fire</comment>
			<result outcome="success" type="interval" value="≥ 0.97505 (95% CI)" timestamp="2024-07-22 16:15:13 +0200">
				<option key="--epsilon" value="0.025"/>
				<details>≥ 0.97505 (95% CI)</details>
			</result>
		</query>
	</queries>
</nta>
